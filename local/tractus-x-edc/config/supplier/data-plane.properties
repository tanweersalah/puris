# API
web.http.port=9280
web.http.path=/api
# Public
web.http.public.port=9285
web.http.public.path=/api/public
# new in 0.7.0 data plane signalling, replaced control
web.http.signaling.port=9283
web.http.signaling.path=/api/signaling
# new in 0.3.3 - why do we need the management in a data plane?
web.http.management.port=9293
web.http.management.path=/api/v1/data
# Validation endpoint of controlplane
edc.dataplane.token.validation.endpoint=http://supplier-control-plane:9183/api/controlplane/control/token
# EDC hostname
edc.hostname=supplier-data-plane
# HashiCorp vault related configuration
edc.vault.hashicorp.url=http://vault:8200
# set via docker-compose .env
edc.vault.hashicorp.health.check.enabled=false
edc.vault.hashicorp.token=${VAULT_DEV_ROOT_TOKEN_ID}
# EDR extensions
edc.datasource.edr.name=edr
edc.datasource.edr.url=jdbc:postgresql://postgres-all:5432/edc_supplier
#edc.datasource.edr.user and edc.datasource.edr.password are set via .env
#org.eclipse.tractusx.edc.postgresql.migration.edr.enabled=false
edc.datasource.edr.user=${PG_USER}
edc.datasource.edr.password=${PG_PW}
# see extension https://github.com/eclipse-edc/Connector/tree/main/extensions/data-plane/store/sql/data-plane-store-sql
edc.datasource.dataplane.name=edr
edc.datasource.dataplane.url=jdbc:postgresql://postgres-all:5432/edc_supplier
edc.datasource.dataplane.user=${PG_USER}
edc.datasource.dataplane.password=${PG_PW}
# extension https://github.com/eclipse-edc/Connector/tree/main/extensions/data-plane/store/sql/accesstokendata-store-sql
edc.datasource.accesstokendata.name=edr
edc.datasource.accesstokendata.url=jdbc:postgresql://postgres-all:5432/edc_supplier
edc.datasource.accesstokendata.user=${PG_USER}
edc.datasource.accesstokendata.password=${PG_PW}
# token refresh
edc.dataplane.token.expiry=300
edc.dataplane.token.expiry.tolerance=10
# optional endpoint
#edc.dataplane.token.refresh.endpoint=
edc.transfer.proxy.token.signer.privatekey.alias=${SUPPLIER_PRIVATE_KEY_ALIAS}
edc.transfer.proxy.token.verifier.publickey.alias=${SUPPLIER_PUBLIC_KEY_ALIAS}
# IATP
edc.iam.issuer.id=did:web:mock-util-service/supplier
edc.participant.id=BPNL1234567890ZZ
edc.iam.sts.oauth.token.url=http://keycloak:8080/realms/miw_test/protocol/openid-connect/token
edc.iam.sts.oauth.client.id=${SUPPLIER_OAUTH_CLIENT_ID}
edc.iam.sts.oauth.client.secret.alias=${SUPPLIER_OAUTH_SECRET_ALIAS}
edc.iam.sts.dim.url=http://mock-util-service:80/sts
edc.iam.trusted-issuer.portal.id=did:web:mock-util-service/trusted-issuer
# configure one Credential service for all (else pulled from did): https://github.com/eclipse-tractusx/tractusx-edc/blob/d7d3586ffc4ef03c858e38fde6bfa8687efa50c9/edc-extensions/bdrs-client/src/main/java/org/eclipse/tractusx/edc/identity/mapper/BdrsClientExtension.java#L50
tx.iam.credentialservice.url=http://mock-util-service:80
# don't use https during did resolving in catalog request
edc.iam.did.web.use.https=false
